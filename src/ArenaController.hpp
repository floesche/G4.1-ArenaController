//.$file${.::ArenaController.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ArenaController.qm
// File:  ${.::ArenaController.hpp}
//
// This code has been generated by QM 5.1.3 <www.state-machine.com/qm/>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${.::ArenaController.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef ARENA_CONTROLLER_HPP
#define ARENA_CONTROLLER_HPP

#include "qpcpp.hpp"   // QP-C++ framework
#include "bsp.hpp"

namespace AC {

enum ArenaControllerSignals {
    RESET_SIG = QP::Q_USER_SIG,
    ALL_ON_SIG,
    ALL_OFF_SIG,
    DISPLAY_FRAME_TIMEOUT_SIG,
    MAX_PUB_SIG,    // the last published signal
    COMMAND_TIMEOUT_SIG,
    MAX_SIG         // the last signal
};

} // namespace AC

namespace ArduinoInterface {

void setup();
void loop();

} // namespace ArduinoInterface

//.$declare${Events} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace AC {

//.${Events::CommandEvt} .....................................................
class CommandEvt : public QP::QEvt {};
//.${Events::DisplayFrameEvt} ................................................
class DisplayFrameEvt : public QP::QEvt {};

} // namespace AC
//.$enddecl${Events} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

// genearate declarations of all opaque AO pointers
//.$declare${AOs::AO_Arena} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace AC {

extern QP::QActive * const AO_Arena;

} // namespace AC
//.$enddecl${AOs::AO_Arena} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif // ARENA_CONTROLLER_HPP

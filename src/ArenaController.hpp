//.$file${.::ArenaController.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ArenaController.qm
// File:  ${.::ArenaController.hpp}
//
// This code has been generated by QM 5.1.3 <www.state-machine.com/qm/>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${.::ArenaController.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef ARENA_CONTROLLER_HPP
#define ARENA_CONTROLLER_HPP

#include "qpcpp.hpp"   // QP-C++ framework
#include "bsp.hpp"

namespace AC {

enum ArenaControllerSignals {

    // commands from serial or ethernet interface
    RESET_SIG = QP::Q_USER_SIG,
    ALL_ON_SIG,
    ALL_OFF_SIG,

    // bsp to SerialCommandInterface
    ACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,
    DEACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,

    // bsp to EthernetCommandInterface
    ACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
    DEACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
    ETHERNET_INITIALIZED_SIG,

    DEACTIVATE_DISPLAY_SIG,
    DISPLAY_MULTIPLE_FRAMES_SIG,
    DISPLAY_FRAME_SIG,
    FRAME_DISPLAYED_SIG,
    DISPLAY_FRAME_TIMEOUT_SIG,

    MAX_PUB_SIG,    // the last published signal

    SERIAL_COMMAND_TIMEOUT_SIG, // signal for SerialCommandInterface timeout event
    ETHERNET_COMMAND_TIMEOUT_SIG, // signal for EthernetCommandInterface timeout event

    MAX_SIG         // the last signal
};

} // namespace AC

namespace ArduinoInterface {

void setup();
void loop();

} // namespace ArduinoInterface

//.$declare${Shared} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace AC {

//.${Shared::CommandEvt} .....................................................
class CommandEvt : public QP::QEvt {};
//.${Shared::DisplayFrameEvt} ................................................
class DisplayFrameEvt : public QP::QEvt {};
extern QP::QActive * const AO_Arena;
extern QP::QActive * const AO_Display;
extern QP::QActive * const AO_SerialCommandInterface;
extern QP::QActive * const AO_EthernetCommandInterface;

} // namespace AC
//.$enddecl${Shared} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif // ARENA_CONTROLLER_HPP

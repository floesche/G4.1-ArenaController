#ifndef SIGNALS_HPP
#define SIGNALS_HPP

#include "qpcpp.hpp"


namespace AC
{

enum ArenaControllerSignals
{
  // commands from serial or ethernet interface
  RESET_SIG = QP::Q_USER_SIG,
  ALL_ON_SIG,
  ALL_OFF_SIG,

  DEACTIVATE_DISPLAY_SIG,
  DISPLAY_FRAMES_SIG,
  TRANSFER_FRAME_SIG,
  PANEL_SET_TRANSFERRED_SIG,
  FRAME_TRANSFERRED_SIG,

  SERIAL_COMMAND_AVAILABLE_SIG,
  ETHERNET_COMMAND_AVAILABLE_SIG,
  PROCESS_BINARY_COMMAND_SIG,
  PROCESS_STRING_COMMAND_SIG,
  PROCESS_STREAM_COMMAND_SIG,
  COMMAND_PROCESSED_SIG,

  MAX_PUB_SIG, // the last published signal

  // POST to SerialCommandInterface
  SERIAL_TIMEOUT_SIG,
  ACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,
  DEACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,
  SERIAL_READY_SIG,

  // POST to EthernetCommandInterface
  ETHERNET_TIMEOUT_SIG,
  ACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
  DEACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
  ETHERNET_INITIALIZED_SIG,
  ETHERNET_SERVER_CONNECTED_SIG,

  // POST to Display
  DISPLAY_TIMEOUT_SIG,
  SET_DISPLAY_FREQUENCY_SIG,

  // POST to Watchdog
  WATCHDOG_TIMEOUT_SIG,

  MAX_SIG // the last signal
};

} // namespace AC

#endif // SIGNALS_HPP

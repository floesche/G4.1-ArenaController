//.$file${.::Display.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ArenaController.qm
// File:  ${.::Display.hpp}
//
// This code has been generated by QM 5.1.3 <www.state-machine.com/qm/>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${.::Display.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef DISPLAY_HPP
#define DISPLAY_HPP

#include "ArenaController.hpp"


//============================================================================
// generate declaration of the active object
//.$declare${AOs::Display} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace AC {

//.${AOs::Display} ...........................................................
class Display : public QP::QActive {
public:
    static Display instance;
    std::uint8_t const (*frame_buffer_)[];
    std::uint32_t display_frequency_hz_;
    std::uint8_t panel_buffer_byte_count_;
    QP::QTimeEvt display_time_evt_;

public:
    Display();

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(Initialized);
    Q_STATE_DECL(Inactive);
    Q_STATE_DECL(Active);
    Q_STATE_DECL(DisplayingFrames);
    Q_STATE_DECL(WaitingToDisplayFrame);
    Q_STATE_DECL(DisplayingFrame);
};

} // namespace AC
//.$enddecl${AOs::Display} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif
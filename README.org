#+TITLE: PanelsController
#+AUTHOR: Peter Polidoro
#+EMAIL: peter@polidoro.io

* Library Information
- Name: PanelsController
- Description: Arduino library for communicating with the Reiser Lab Modular LED Display panels.
- Version: 0.1.0
- Panel Version: G4 v1.9
- Release Date: 2023-08-25
- Creation Date: 2023-08-16
- License: BSD-3-Clause
- URL: https://github.com/janelia-arduino/PanelsController
- Author: Peter Polidoro
- Email: peter@polidoro.io
- Copyright: 2023 Howard Hughes Medical Institute
- References:
  - https://reiserlab.github.io/Modular-LED-Display/

* Modular LED Display

** System Components

*** Arena

An arena is a set of panels arranged in rows and columns.

#+html: <img src="./images/arena.png" width="1214px">

*** Panel

A panel is a set of quarter panels arranged in rows and columns.

#+html: <img src="./images/panel.png" width="192px">

*** Quarter Panel

A quarter panel is a set of LED pixels arranged in rows and columns.

#+html: <img src="./images/quarter_panel.png" width="96px">

** Display Modes

*** Grayscale

In grayscale mode, each LED can be one of sixteen brightness levels.

#+html: <img src="./images/grayscale.png" width="400px"

*** Binary

In binary mode, each LED can be one of two brightness levels, on or off.

#+html: <img src="./images/binary.png" width="400px"

** Display Messages

*** Pixels in Message Byte

#+BEGIN_SRC cpp
constexpr uint8_t BIT_COUNT_PER_BYTE = 8;

constexpr uint8_t BIT_COUNT_PER_PIXEL_GRAYSCALE = 4;
constexpr uint8_t BIT_COUNT_PER_PIXEL_BINARY = 1;

constexpr uint8_t PIXEL_COUNT_PER_BYTE_GRAYSCALE = BIT_COUNT_PER_BYTE / BIT_COUNT_PER_PIXEL_GRAYSCALE;
constexpr uint8_t PIXEL_COUNT_PER_BYTE_BINARY = BIT_COUNT_PER_BYTE / BIT_COUNT_PER_PIXEL_BINARY;
#+END_SRC

*** Quarter Panel

**** Pixels

#+BEGIN_SRC cpp
constexpr uint8_t PIXEL_COUNT_PER_QUARTER_PANEL_ROW = 8;
constexpr uint8_t PIXEL_COUNT_PER_QUARTER_PANEL_COL = 8;
constexpr uint8_t PIXEL_COUNT_PER_QUARTER_PANEL = PIXEL_COUNT_PER_QUARTER_PANEL_ROW * PIXEL_COUNT_PER_QUARTER_PANEL_COL;
#+END_SRC

Pixel numbering for each pixel in a quarter panel:

#+html: <img src="./images/quarter_panel_pixels.png" width="1200px">

**** Grayscale

#+html: <img src="./images/quarter_panel_grayscale.png" width="1200px">

**** Binary

#+html: <img src="./images/quarter_panel_binary.png" width="1200px">

*** Panel

#+BEGIN_SRC cpp
#+END_SRC

**** Quarter Panels in Panel

Quarter panel numbering for each quarter panel in a panel plus pixel numbering for select pixels in a panel:

#+html: <img src="./images/panel_quarter_panels.png" width="1200px">

*** Arena

One arena is made up of a maximum of (6 columns x 5 rows ) = 30 panels.

**** Panels in Arena

Panel numbering for each panel in an arena:

#+html: <img src="./images/arena_panels.png" width="1200px">

* Development

** Download this repository

[[https://github.com/janelia-arduino/PanelsController.git]]

#+BEGIN_SRC sh
sudo apt install -y git
mkdir -p ~/tmp && cd ~/tmp && git clone https://github.com/janelia-arduino/PanelsController.git
#+END_SRC

** PlatformIO

*** Install PlatformIO Core

[[https://docs.platformio.org/en/latest/core/installation/index.html]]

**** Example

#+BEGIN_SRC sh
sudo apt install -y python3-venv
cd ~/tmp/PanelsController
python3 -m venv .venv
source .venv/bin/activate
pip install platformio
pio --version
#+END_SRC

**** 99-platformio-udev.rules

Linux users have to install udev rules for PlatformIO supported boards/devices.

***** Download udev rules file to /etc/udev/rules.d

#+BEGIN_SRC sh
curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules
#+END_SRC

***** Restart udev management tool

#+BEGIN_SRC sh
sudo service udev restart
#+END_SRC

***** Add user to groups

#+BEGIN_SRC sh
sudo usermod -a -G dialout $USER
sudo usermod -a -G plugdev $USER
#+END_SRC

***** Remove modemmanager

#+BEGIN_SRC sh
sudo apt-get purge --auto-remove modemmanager
#+END_SRC


*** Compile the firmware

**** Example

#+BEGIN_SRC sh
cd ~/tmp/PanelsController
pio run
#+END_SRC

*** Upload the firmware

**** Example

#+BEGIN_SRC sh
cd ~/tmp/PanelsController
pio run -e teensy41 -t upload
#+END_SRC

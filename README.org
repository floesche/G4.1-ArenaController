#+TITLE: PanelsController
#+AUTHOR: Peter Polidoro
#+EMAIL: peter@polidoro.io

* Library Information
- Name: PanelsController
- Description: Arduino library for communicating with the Reiser Lab Modular LED Display panels.
- Version: 0.1.0
- Release Date: 2023-08-16
- Creation Date: 2023-08-16
- License: BSD-3-Clause
- URL: https://github.com/janelia-arduino/PanelsController
- Author: Peter Polidoro
- Email: peter@polidoro.io
- Copyright: 2023 Howard Hughes Medical Institute
- References:
  - https://reiserlab.github.io/Modular-LED-Display/

* Layout Numbering

** Quarter Panel

One quarter panel is made up of (8 columns x 8 rows) = 64 pixels

One pixel message is 1 nibble (1/2 byte)

One quarter panel message byte = 2 pixel messages = low nibble | (high nibble << 4)

One quarter panel message is made up of (64 pixels / 2 pixels per byte) + 1 special byte = 33 bytes

#+BEGIN_SRC cpp
quarter_panel_message[pixel_byte_i] = pixel[pixel_col_i][pixel_row_i] | (pixel[pixel_col_i][pixel_row_i + 1] << 4)
#+END_SRC

| pixel_byte_i  | pixel_col_i 0 | pixel_col_i 1 | pixel_col_i 2 | pixel_col_i 3 | pixel_col_i 4 | pixel_col_i 5 | pixel_col_i 6 | pixel_col_i 7 |
| pixel_row_i 7 | 4 high        | 8 high        | 12 high       | 16 high       | 20 high       | 24 high       | 28 high       | 33 high       |
| pixel_row_i 6 | 4 low         | 8 low         | 12 low        | 16 low        | 20 low        | 24 low        | 28 low        | 33 low        |
| pixel_row_i 5 | 3 high        | 7 high        | 11 high       | 15 high       | 19 high       | 23 high       | 27 high       | 32 high       |
| pixel_row_i 4 | 3 low         | 7 low         | 11 low        | 15 low        | 19 low        | 23 low        | 27 low        | 31 low        |
| pixel_row_i 3 | 2 high        | 6 high        | 10 high       | 14 high       | 18 high       | 22 high       | 26 high       | 30 high       |
| pixel_row_i 2 | 2 low         | 6 low         | 10 low        | 14 low        | 18 low        | 22 low        | 26 low        | 30 low        |
| pixel_row_i 1 | 1 high        | 5 high        | 9 high        | 13 high       | 17 high       | 21 high       | 25 high       | 29 high       |
| pixel_row_i 0 | 1 low         | 5 low         | 9 low         | 13 low        | 17 low        | 21 low        | 25 low        | 29 low        |

** Panel

One panel is made up of 4 quarter panels.

One panel is ((8 x 2 columns) x (8 x 2 rows)) = 256 pixels

One panel message = 4 quarter panel messages = (4 x 33 bytes) = 132 bytes

#+BEGIN_SRC cpp
panel_message[(pixel_byte_i + (quarter_panel_i x 33))] = quarter_panel_message[pixel_byte_i]
#+END_SRC

| quarter_panel_i       | quarter_panel_col_i 0 | quarter_panel_col_i 1 |
|-----------------------+-----------------------+-----------------------|
| quarter_panel_row_i 1 |                     1 |                     3 |
| quarter_panel_row_i 0 |                     0 |                     2 |

| pixel_byte_i   | pixel_col_i 0 | ... | pixel_col_i 7 | pixel_col_i 8 | ... | pixel_col_i 15 |
|----------------+---------------+-----+---------------+---------------+-----+----------------|
| pixel_row_i 15 | 37 high       | ... | 65 high       | 103 high      | ... | 131 high       |
| pixel_row_i 14 | 37 low        | ... | 65 low        | 103 low       | ... | 131 low        |
| ...            | ...           | ... | ...           | ...           | ... | ...            |
| pixel_row_i 9  | 34 high       | ... | 62 high       | 100 high      | ... | 128 high       |
| pixel_row_i 8  | 34 low        | ... | 62 low        | 100 low       | ... | 128 low        |
| pixel_row_i 7  | 4 high        | ... | 32 high       | 70 high       | ... | 98 high        |
| pixel_row_i 6  | 4 low         | ... | 32 low        | 70 low        | ... | 98 low         |
| ...            | ...           | ... | ...           | ...           | ... | ...            |
| pixel_row_i 1  | 1 high        | ... | 29 high       | 67 high       | ... | 95 high        |
| pixel_row_i 0  | 1 low         | ... | 29 low        | 67 low        | ... | 95 low         |

** Arena

One arena is made up of a maximum of (6 columns x 5 rows ) = 35 panels.

| panel_i       | panel_col_i 0 | panel_col_i 1 | panel_col_i 2 | panel_col_i 3 | panel_col_i 4 | panel_col_i 5 | panel_col_i 6 |
|---------------+---------------+---------------+---------------+---------------+---------------+---------------+---------------|
| panel_row_i 5 |             4 |             9 |            14 |            19 |            24 |            29 |            34 |
| panel_row_i 4 |             3 |             8 |            13 |            18 |            23 |            28 |            33 |
| panel_row_i 3 |             2 |             7 |            12 |            17 |            22 |            27 |            32 |
| panel_row_i 2 |             1 |             6 |            11 |            16 |            21 |            26 |            31 |
| panel_row_i 1 |             0 |             5 |            10 |            15 |            20 |            25 |            30 |

* Development

** PlatformIO

*** Install PlatformIO Core

[[https://docs.platformio.org/en/latest/core/installation/index.html]]

**** Example

#+BEGIN_SRC sh
sudo apt install -y python3-venv
mkdir -p ~/platformio/venv
python3 -m venv ~/platformio/venv
source ~/platformio/venv/bin/activate
pip install platformio
pio --version
#+END_SRC

**** 99-platformio-udev.rules

Linux users have to install udev rules for PlatformIO supported boards/devices.

***** Download udev rules file to /etc/udev/rules.d

#+BEGIN_SRC sh
curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules
#+END_SRC

***** Restart udev management tool

#+BEGIN_SRC sh
sudo service udev restart
#+END_SRC

***** Add user to groups

#+BEGIN_SRC sh
sudo usermod -a -G dialout $USER
sudo usermod -a -G plugdev $USER
#+END_SRC

***** Remove modemmanager

#+BEGIN_SRC sh
sudo apt-get purge --auto-remove modemmanager
#+END_SRC

*** Download this repository

[[https://github.com/janelia-arduino/PanelsController.git]]

**** Example

#+BEGIN_SRC sh
sudo apt install -y git
cd ~/platformio
git clone https://github.com/janelia-arduino/PanelsController.git
#+END_SRC

*** Compile the firmware

**** Example

#+BEGIN_SRC sh
cd ~/platformio/PanelsController
pio run -e teensy41
#+END_SRC

*** Upload the firmware

**** Example

#+BEGIN_SRC sh
cd ~/platformio/PanelsController
pio run -e teensy41 -t upload
#+END_SRC
